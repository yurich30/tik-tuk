{"version":3,"sources":["services/videosAPI.ts","components/VideoItem/VideoItem.tsx","components/Loader/Loader.tsx","components/VideoItem/VideoItems.tsx","components/NavBar/Navbar.tsx","components/UserVideos/UserVideos.tsx","components/NotFound/NotFound.jsx","components/Profile/Profile.tsx","components/App.tsx","store/store.ts","index.tsx"],"names":["videosAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","build","fetchAllVideos","query","method","url","headers","fetchUserInfo","VideoItem","video","className","to","src","authorMeta","avatar","alt","name","hashtags","musicMeta","musicName","musicAuthor","controls","videoUrl","autoPlay","loop","Loader","VideoItems","useFetchAllVideosQuery","videos","data","error","isLoading","map","id","Navbar","UserVideos","console","log","itemList","el","stats","playCount","playAddr","NotFound","Profile","useFetchUserInfoQuery","user","avatarMedium","nickname","followerCount","followingCount","heart","videoCount","App","path","element","rootReducer","combineReducers","reducer","store","configureStore","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c6e886b.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react';\nimport { IVideos } from '../models/IVideos';\n\nexport const videosAPI = createApi({\n  reducerPath: 'videosAPI',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://tiktok33.p.rapidapi.com' }),\n  endpoints: (build) => ({\n    fetchAllVideos: build.query<IVideos[], string>({\n      query: () => ({\n        method: 'GET',\n        url: '/trending/feed',\n        headers: {\n          'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\n          'x-rapidapi-key':\n            '294f036434msh90cf68bd9dd8898p152614jsn805ac4221ef0',\n        },\n      }),\n    }),\n    fetchUserInfo: build.query({\n      query: () => ({\n        method: 'GET',\n        url: '/user/info/dave.xp',\n        headers: {\n          'x-rapidapi-host': 'tiktok33.p.rapidapi.com',\n          'x-rapidapi-key':\n            '294f036434msh90cf68bd9dd8898p152614jsn805ac4221ef0',\n        },\n      }),\n    }),\n  }),\n});\n","import React from 'react';\nimport { IVideos } from '../../models/IVideos';\nimport './VideoItem.css';\nimport { Link } from 'react-router-dom';\n\ninterface VideoItemProps {\n  video: IVideos;\n}\n\nconst VideoItem: React.FC<VideoItemProps> = ({ video }) => {\n  return (\n    <div className=\"item\">\n      <div className=\"item__header\">\n        <Link to={`/user`}>\n          <div className=\"author__info\">\n            <img\n              src={video.authorMeta.avatar}\n              alt=\"avatar\"\n              className=\"item__avatar\"\n            />\n            <div className=\"info\">\n              <div className=\"name\">{video.authorMeta.name}</div>\n              <div className=\"hashtags\">{video?.hashtags[0]?.name}</div>\n              <div className=\"music\">\n                {video.musicMeta.musicName} - {video.musicMeta.musicAuthor}\n              </div>\n            </div>\n          </div>\n        </Link>\n        <button className=\"follow__button\">Follow</button>\n      </div>\n      <div className=\"item__video-section\">\n        <video\n          controls\n          src={video.videoUrl}\n          autoPlay\n          loop\n          className=\"item__video\"\n        />\n        <div className=\"item__video-info\">\n          <div className=\"item__video-likes\"></div>\n          <div className=\"item__videos-comments\"></div>\n          <div className=\"item__videos-repost\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport './Loader.css';\n\nconst Loader = () => {\n  return (\n    <div className=\"lds-spinner\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { videosAPI } from '../../services/videosAPI';\nimport { IVideos } from '../../models/IVideos';\nimport VideoItem from './VideoItem';\nimport Loader from '../Loader/Loader';\n\nconst VideoItems = () => {\n  const {\n    data: videos,\n    error,\n    isLoading,\n  } = videosAPI.useFetchAllVideosQuery('');\n\n  return (\n    <div className=\"item__list container\">\n      {error && <h1>Error</h1>}\n      {videos &&\n        videos.map((video: IVideos) => (\n          <VideoItem key={video.id} video={video} />\n        ))}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default VideoItems;\n","import { Link } from 'react-router-dom';\nimport './NavBar.css';\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>Tik Tuk</h1>\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/profile\">Profile</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport data from '../../data/user-feed.json';\nimport '../VideoItem/VideoItem.css';\n\nconst UserVideos = () => {\n  console.log(data.itemList);\n\n  return (\n    <div className=\"container item__list\">\n      {data.itemList.map((el) => (\n        <div key={el.id}>\n          <div>View Count: {el.stats.playCount}</div>\n          <video\n            controls\n            src={el.video.playAddr}\n            autoPlay\n            loop\n            className=\"item__video\"\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default UserVideos;\n","import { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <h2>Sorry</h2>\n      <p>That page cannot be found</p>\n      <Link to=\"/\">Back to the homepage...</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { videosAPI } from '../../services/videosAPI';\nimport Loader from '../Loader/Loader';\nimport React from 'react';\nimport './Profile.css';\nimport UserVideos from '../UserVideos/UserVideos';\n\nconst Profile = () => {\n  const { data: user, error, isLoading } = videosAPI.useFetchUserInfoQuery('');\n  return (\n    <div className=\"container\">\n      {error && <h1>Error</h1>}\n\n      {user && (\n        <>\n          <div className=\"user\">\n            <img\n              src={user.user.avatarMedium}\n              alt=\"user__avatar\"\n              className=\"user__avatar\"\n            />\n            <h2>{user.user.nickname}</h2>\n            <div className=\"user__stats\">\n              <div>Followers: {user.stats.followerCount}</div>\n              <div>Followed: {user.stats.followingCount}</div>\n              <div>Hearts: {user.stats.heart}</div>\n              <div>Videos: {user.stats.videoCount}</div>\n            </div>\n          </div>\n          <UserVideos />\n        </>\n      )}\n\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport VideoItems from './VideoItem/VideoItems';\nimport Navbar from './NavBar/Navbar';\nimport UserVideos from './UserVideos/UserVideos';\nimport NotFound from './NotFound/NotFound';\nimport Profile from './Profile/Profile';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<VideoItems />} />\n        <Route path=\"/profile\" element={<Profile />} />\n        <Route path=\"/user\" element={<UserVideos />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { videosAPI } from '../services/videosAPI';\n\nconst rootReducer = combineReducers({\n  [videosAPI.reducerPath]: videosAPI.reducer,\n});\n\nexport const setupStore = () => {\n  return configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware().concat(videosAPI.middleware),\n  });\n};\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport type AppStore = ReturnType<typeof setupStore>;\n\nexport type AppDispatch = AppStore['dispatch'];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { setupStore } from './store/store';\n\nconst store = setupStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}